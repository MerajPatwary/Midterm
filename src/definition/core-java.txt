Please answer the below core-java Questions:

What is programing language?

Ans :programming language is a set of commands, instructions, and other syntax use to create a software program.

What jdk contains or composed of and define each components?

The Java Development Kit (JDK) is a software development environment used for developing Java applications and applets.
 It includes the Java Runtime Environment (JRE),
 an interpreter/loader (java), a compiler (javac),
 an archiver (jar), a documentation generator (javadoc) and other tools needed in Java development.

What is IDE?

An IDE, or Integrated Development Environment, enables programmers to consolidate the different aspects of writing a

 computer program.

What are the IDEs available in the market to support java?
Eclipse,IntelliJ,NetBeans,JDeveloper,MyEclipse,BlueJ,JCreator,DrJava,jGRASP,JSource

Explain the entire java life cycle.

Life cycle of a java program tells us what happens right from the point when we type source code in
 a text editor to the point that source code is converted into machine code (0’s and 1’s).
 There are three main stages in the life cycle of a java program. They are:
 First editing the program
 Second compiling the source code
 Third executing the byte code
 First, you will start with typing the program in a text-editor and file must be saved with .java extension.
 Second step is compilation. The name of the Java compiler is javac.
 The output of the compiler is machine independent or platform independent code which is known as bytecode.
 The file which is generated after compilation is .class file.
 Execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
 Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

what is class?

class is a user defined blueprint or prototype from which objects are created.  It represents the set of properties or
methods that are common to all objects of one type In general, class declarations can include these components,

What is object?

Object is an instance of a class. An object in OOPS is nothing but a self-contained component which consists of methods and properties to make a particular type of data useful.
For example color name, table, bag, barking. When you send a message to an object,
 you are asking the object to invoke or execute one of its methods as defined in the class.

What is the entry point of an application?

The main method is the entry point of a Java application. Specifically、when the Java Virtual Machine is told to run an application
by specifying its class (by using the java application launcher),
it will look for the main method with the signature of public static void main(String[]) .
Why main is static?
The main method has to be static so that JVM can load the class into memory and call the main method.
If the main method won't be static, JVM would not be able to call it because there is no object of the class is present.

Which class is the superclass of all classes?

object class is is the superclass of all classes
 Super Class: The class whose features are inherited is known as super class(or a base class or a parent class).

What is difference between path and classpath variables?

Path and Classpath both are operating system level environment variables.
     Path is used define where the system can find the executables(.exe)
     files and classpath is used to specify the location .class files.

What is the difference between an Interface and Abstract class?

An abstract class allows you to create functionality that subclasses can implement or override.
An interface only allows you to define functionality,not implement it.
And whereas a class can extend only one abstract class, it can take advantage of multiple interfaces

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?

You cannot create an object of abstract class or interface since they are incomplete class
(interface is not even considered as a class.) what you can do is to implement a subclass of abstract class which,
of course, must not be abstract.

what is Access Specifier?

 public - can call to any class or package
    private - goes only inside the same class
    protected - goes same class, package, subclass
  default - can go inside package and to any subclasses

What is OOP ? Define each feature of java OOP.

OOP concepts in Java are the main ideas behind Java’s Object Oriented Programming.
      They are an abstraction, encapsulation, inheritance, and polymorphism.
      Grasping them is key to understanding how Java works. Basically,
      Java OOP concepts let us create working methods and variables, then re-use all or part of them without compromising security.
Abstraction.is a process of hiding the implementation details from the user, only the functionality will be provided to the user.
            Encapsulation - is a mechanism of wrapping the data (variables) and code acting on the data (methods) together as a single unit.
            By declare the variables of a class as private. Provide public setter and getter methods to modify and view the variables values.
Encapsulation. This is the practice of keeping fields within a class private, then providing access to them via public methods.
          It’s a protective barrier that keeps the data and code safe within the class itself.
          This way, we can re-use objects like code components or variables without allowing open access to the data system-wide.
Inheritance. can be defined as the process where one class acquires the properties (methods and fields) of another.
         The class which inherits the properties of other is known as subclass (derived class, child class)
          and the class whose properties are inherited is known as superclass (base class, parent class).
Polymorphism.This Java OOP concept lets programmers use the same word to mean different things in different contexts.
          One form of polymorphism in Java is method overloading. That’s when different meanings are implied by the code itself.
          The other form is method overriding. That’s when the different meanings are implied by the values of the supplied variables.

What is Java Package and which package is imported by default?

A package in Java is used to group related classes.
We use packages to avoid name conflicts, and to write a better maintainable code.
 Java compiler imports java. lang package internally by default.
 It provides the fundamental classes that are necessary to design a basic Java program.

What is API? Name list of API that you have used so far.

Java application programming interface (API) is a list of all classes that are part of the Java development kit (JDK).
An application programming interface (API), in the context of Java, is a collection of prewritten packages, classes, and interfaces with their respective methods, fields and constructors.
Similar to a user interface, which facilitates interaction between humans and computers, an API serves as a software program interface facilitating interaction.
java.util
java.lang
java.sql
Does java support multiple inheritance, explain why or why not?

Java doesn’t allow multiple inheritance to avoid the ambiguity caused by it.

What is method overloading and when it happens?

Method Overloading is a feature that allows a class to have more than one method having the same name,
     if their argument lists are different. It is similar to constructor overloading in Java,
     that allows a class to have more than one constructor having different argument lists.

Explain exceptions in java and how to handle it.

An  exception is an unwanted or unexpected event, which occurs during the execution of a program i.
         e at run time, that disrupts the normal flow of the program’s instructions.
          Customized Exception Handling : Java exception handling is managed via five keywords:
           try, catch, throw, throws, and finally.

What is static keyword in java? How it has been used in variables and methods ?

In Java, static keyword is mainly used for memory management. It can be used with variables, methods, blocks and nested classes.
 It is a keyword which is used to share the same variable or method of a given class.
 Basically, static is used for a constant variable or a method that is same for every instance of a class.
 When a variable is declared as static, then a single copy of variable is created and shared among all objects at class level.
 Static variables are, essentially, global variables. All instances of the class share the same static variable.

What is final and how it has been used variables and methods?

In Java, the final keyword can be used while declaring an entity.
      Using the final keyword means that the value can’t be modified in the future.
      This entity can be - but is not limited to - a variable, a class or a method.
 Final variables
     If a variable is declared with the final keyword, its value cannot be changed once initialized.
     Note that the variable does not necessarily have to be initialized at the time of declaration.
     If it’s declared but not yet initialized, it’s called a blank final variable.

What is final, finally and finalize?

final is a keyword.
     Finally is a block.
     Finalize is a method.

What is a constructor ?

A constructor in Java is a special method that is used to initialize objects.
The constructor is called when an object of a class is created.

Can we have multiple constructors in a class?

Yes. Multiple Constructors for a Java Class. A class can have multiple constructors, as long as their signature
(the parameters they take) are not the same.
      You can define as many constructors as you need.

If we don't have a constructor declared, what is called during the object creation?

All classes have at least one constructor. If a class does not explicitly declare any,
the Java compiler automatically provides a no-argument constructor, called the default constructor. ...
If the parent has no constructor ( Object does have one), the compiler will reject the program.

What is "this" keyword in java ?

 this keyword refers to the current object in a method or constructor. The most common use of the this keyword is to eliminate the confusion between class attributes and parameters with
      the same name (because a class attribute is shadowed by a method or constructor parameter).

What is "super" keyword in java? How many possible way can you use?

super can be used to refer immediate parent class instance variable. super can be used to invoke immediate parent class method.
super() can be used to invoke immediate parent class constructor.

What is JVM stand for ?

Java Virtual Machine

Is JVM platform independent?

Every system has its own JVM which gets installed automatically when the jdk software is installed. ...
An important point to be noted is that while JAVA is platform-independent language, the JVM is platform-dependent.
Different JVM is designed for different OS and byte code is able to run on different OS

What version of java are you using?

java version "11.0.8" 2020-07-14 LTS
     Java(TM) SE Runtime Environment 18.9 (build 11.0.8+10-LTS)
     Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.8+10-LTS, mixed mode)

What is JAR stand for ?

JAR stands for Java ARchive. It's a file format based on the popular ZIP file format and is used for
aggregating many files into one. Although JAR can be used as a general archiving tool, the primary motivation for
its development was so that Java applets and their requisite components.

What is the difference between JDK and JVM?

JDK is Java Development Kit and JVM is Java Virtual Machine. JDK contains JVM and whole other tools for java development inside it. JVM converts bytecode to machine code and execute it on machine.
 There is no matching functionality between JDK and JVM.

What is the difference between JVM and JRE?

JVM is platform independent. As JDK is responsible for prime development so it contains tools for developing,
debugging and monitoring java application. On other hand JRE does not contain tools such as compiler or debugger
etc. ... JVM = Only Runtime environment for executing the Java byte code.

JVM. A Java virtual machine is a virtual machine that enables a computer to run Java programs as well as programs written in other languages that are also compiled to Java bytecode.
      JRE. Java Runtime Environment, or JRE, is a software layer that runs on top of a computer's operating system software and provides the class libraries and other resources that a specific Java program
      needs to run. The JRE is one of three interrelated components for developing and running Java programs.

What is compile time and run time?

Compile-time and Runtime are the two programming terms used in the software development. Compile-time is the time at
which the source code is converted into an executable code while the run time is the time at which the executable code is started running.

What is heap?

The Java heap is the area of memory used to store objects instantiated by applications running on the JVM. Objects in the
heap can be shared between threads. Many users restrict the Java heap size to 2-8 GB in order to minimize garbage collection pauses.

How java manage it's memory?

In Java, memory management is the process of allocation and de-allocation of objects, called Memory management.
    Java does memory management automatically. Java uses an automatic memory management system called a garbage collector.
   Thus, we are not required to implement memory management logic in our application.

What is the difference between String, StringBuffer and StringBuilder?

Strings, which are widely used in Java programming, are a sequence of characters. In the Java programming language, strings are objects. The Java platform provides the String class to create and manipulate strings.
      StringBuilder is same as the StringBuffer , that is it stores the object in heap and it can also be modified . The main difference between the StringBuffer and StringBuilder is that StringBuilder is also not thread safe.
      StringBuilder is fast as it is not thread safe.

What is Singleton class?

In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time.

What is Serialization and Deserialization?

Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.
This mechanism is used to persist the object. The byte stream created is platform independent.

when to use transient variable in java?

transient keyword in Java is used to avoid serialization. If any object of a data structure is defined as a transient ,
 then it will not be serialized. Serialization is the process of converting an object into a byte stream.

Difference between while and do..while loop?

The difference lies in the place where the condition is tested. The while loop tests the condition before executing any of the statements within the while loop
 whereas the do-while loop tests the condition after the statements have been executed within the loop.

What is Enum?

An enum is a special "class" that represents a group of constants.

What is Iterator?

An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.

Which one will take more memory, an int or Integer?

int is a primitive data type which takes 32 bits(4 bytes) to store.
 Integer is an object which takes 128 bits (16 bytes) to store int value.

Why is String Immutable in Java?

The string is Immutable in Java because String objects are cached in the String pool.
What is constructor chaining in Java?

The process of invoking a sequence of constructors upon initialization of a class object is called constructor chaining.
      Constructor chaining is useful when you want to invoke multiple constructors, one after another, by initializing only one instance.

The difference between Serial and Parallel Garbage Collector?

The primary difference between the serial and parallel collectors is that the parallel collector has multiple threads that
are used to speed up garbage collection. The parallel collector is intended for applications with medium-sized to large-sized data sets that are run on multiprocessor or multi-threaded hardware.

What is JIT stands for?

The Just-In-Time (JIT) compiler is a component of the runtime environment that improves the performance of Java™️ applications by compiling
bytecodes to native machine code at run time.

Explain Java Heap space and Garbage collection?

Java Heap space is used by java runtime to allocate memory to Objects and JRE classes. Whenever we create an object, it’s always created in the Heap space.

Can you guarantee the garbage collection process?

Garbage Collection runs on the heap memory to free the memory used by objects that don’t have any reference. Any object created in the heap space has global access and can be referenced from anywhere of the application.

What is the difference between stack and heap in Java?

Heap memory is used by all the parts of the application whereas stack memory is used only by one thread
of execution. Whenever an object is created, it's always stored in the Heap space and stack memory contains the
reference to it.

What is reflection in java and why is it useful?

In Java, reflection allows us to inspect and manipulate classes, interfaces, constructors, methods, and fields at
run time. There is a class in Java named Class that keeps all the information about objects and classes at runtime.
The object of Class can be used to perform reflection.

what is multithreading in java?

Multithreading is a Java feature that allows concurrent execution of two or more parts of a program for maximum
utilization of CPU. Each part of such program is called a thread. So, threads are light-weight processes within a process.

What is the use of synchronization in Java?

Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads in Java.
      Synchronization in Java guarantees that no two threads can execute a synchronized method which requires the same
      lock simultaneously or concurrently.

What is Framework?

rameworks are bodies of prewritten code used by developers to create apps using the Java programming language.

What are the testing Framework available in java?

Take testing to the next level & achieve your goals - Ranorex testing tool! Accelerate testing for desktop,
web and mobile applications. Try out now. For Beginners & Experts. Easy-to-Use & Affordable. Free 30-Day Trial.
Detailed Reporting. Professional Support.

Difference between jUnit and testNG?

JUnit is an open-source framework used to trigger and write tests. TestNG is a Java-based framework that is an
upgraded option for running tests. JUnit does not support to run parallel tests. TestNG can run parallel tests.

What are the dependencies for this project?

In the setting of a project, the definition of dependency shifts somewhat. A project dependency is a logical, constraint-based
 or preferential relationship between two activities or tasks such that the completion or the initiation of one is reliant on the completion or initiation of the other.

what is dependency injection in java?

Dependency Injection in Java is a way to achieve Inversion of control (IoC) in our application by moving objects
binding from compile time to runtime. We can achieve IoC through Factory Pattern, Template Method Design Pattern,
Strategy Pattern and Service Locator pattern too.

What is static binding and dynamic binding?

Static binding happens at compile-time while dynamic binding happens at runtime. Binding of private, static and
final methods always happen at compile time since these methods cannot be overridden. ... The binding of overloaded
methods is static and the binding of overridden methods is dynamic.
